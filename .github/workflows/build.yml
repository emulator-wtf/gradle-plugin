name: Build and test
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: jdx/mise-action@v2
        with:
          install_args: 'java@zulu-11.80.21' # needed for Gradle toolchains
      - name: symlink asdf
        run: |
          mkdir -p $HOME/.asdf/installs/
          ln -s $HOME/.local/share/mise/installs/java $HOME/.asdf/installs/
      - name: Build plugin
        run: ./gradlew lint assemble publishAllPublicationsToIntreeRepository -PRELEASE_SIGNING_ENABLED=false
      - name: Store maven repo as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: gradle-plugin-repo
          path: build/maven-repo/

  test-project-isolation:
    runs-on: ubuntu-latest
    needs: build
    env:
      EW_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-integration-tests
        name: "Run integration tests against latest Gradle/AGP w/ project-isolation and config cache"
        with:
          test-project: 'project-isolation'
          gh-token: ${{ secrets.GITHUB_TOKEN }}

  test-latest:
    runs-on: ubuntu-latest
    needs: build
    env:
      EW_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-integration-tests
        name: "Run integration tests against latest Gradle/AGP"
        with:
          test-project: 'latest'
          gh-token: ${{ secrets.GITHUB_TOKEN }}

  test-oldest:
    runs-on: ubuntu-latest
    needs: build
    env:
      EW_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-integration-tests
        name: "Run integration tests against oldest supported Gradle/AGP"
        with:
          test-project: 'oldest'
          gh-token: ${{ secrets.GITHUB_TOKEN }}

  test-abi-splits:
    runs-on: ubuntu-latest
    needs: build
    env:
      EW_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-integration-tests
        name: "Run integration tests against various ABI splits"
        with:
          test-project: 'abi-splits'
          gh-token: ${{ secrets.GITHUB_TOKEN }}
